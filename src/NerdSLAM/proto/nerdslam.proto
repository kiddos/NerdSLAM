package nerd.slam;

message KinectConfigV1 {
  enum VideoFormat {
    RGB = 0;
    YUV_RGB = 1;
    YUV_RAW = 2;
  }
  required VideoFormat video_format = 1;
  required bool rgb = 2;
  required bool depth = 3;
  required int32 timeout = 4;
}

message KinectConfigV2 {
  enum PacketPipelineType {
    OPENGL = 0;
    OPENCL = 1;
    CPU = 2;
    DUMP = 3;
  }
  required PacketPipelineType packet_pipeline_type = 1;

  enum LoggerType {
    CONSOLE = 0;
    FILE = 1;
  }
  required LoggerType logger_type = 2;
  required string log_filepath = 3;

  enum LogLevel {
    DEBUGGING = 0;
    INFO = 1;
    WARNING = 2;
    ERROR = 3;
  }
  required LogLevel log_level = 4;

  required bool rgb = 5;
  required bool ir = 6;
  required bool depth = 7;
  required bool registration = 8;
  required int32 timeout = 9;
}

message Frame {
  required int32 width = 1;
  required int32 height = 2;
  required bytes data = 3;
  enum Type {
    BGRX = 0;
    RGBX = 1;
    FLOAT = 2;
    GRAY = 3;
    RGB = 4;
  }
  required Type type = 4;
}

message Point {
  required float x = 1;
  required float y = 2;
  required float z = 3;
  required int32 r = 4;
  required int32 g = 5;
  required int32 b = 6;
}

message PointCloud {
  repeated Point points = 1;
}

message FrameMap {
  required Frame color_frame = 1;
  required Frame ir_frame = 2;
  required Frame depth_frame = 3;
  required PointCloud point_cloud = 4;
}

message OpenGLWindowConfig {
  required int32 width = 1;
  required int32 height = 2;
  required string title = 3;
  required int32 major_version = 4;
  required int32 minor_version = 5;
  required bool debug = 6;
}
